[
	{
		"collection": "input_sensors",
		"name": "LacI_sensor",
		"model": "LacI_sensor_model",
		"structure": "LacI_sensor_structure"
	},
	{
		"collection": "models",
		"name": "LacI_sensor_model",
		"functions": {
			"response_function": "sensor_response"
		},
		"parameters": [
			{
				"name": "ymax",
				"value": 0.0532,
				"description": "Maximal transcription (2.8 RPU * 0.019 for conversion to RNAP/s)"
			},
			{
				"name": "ymin",
				"value": 0.0000646,
				"description": "Minimal transcription (0.0034 RPU * 0.019 for conversion to RNAP/s)"
			},
			{
				"name": "alpha",
				"value": 0.73,
				"description": "Tandem parameter"
			},
			{
				"name": "beta",
				"value": 0.04,
				"description": "Tandem parameter"
			}
		]
	},
	{
		"collection": "structures",
		"name": "LacI_sensor_structure",
		"outputs": [
			"pTac"
		]
	},
	{
		"collection": "input_sensors",
		"name": "TetR_sensor",
		"model": "TetR_sensor_model",
		"structure": "TetR_sensor_structure"
	},
	{
		"collection": "models",
		"name": "TetR_sensor_model",
		"functions": {
			"response_function": "sensor_response"
		},
		"parameters": [
			{
				"name": "ymax",
				"value": 0.0836,
				"description": "Maximal transcription (4.4 RPU * 0.019 for conversion to RNAP/s)"
			},
			{
				"name": "ymin",
				"value": 0.0000247,
				"description": "Minimal transcription (0.0013 RPU * 0.019 for conversion to RNAP/s)"
			},
			{
				"name": "alpha",
				"value": 0.69,
				"description": "Tandem parameter"
			},
			{
				"name": "beta",
				"value": 1.0,
				"description": "Tandem parameter"
			}
		]
	},
	{
		"collection": "structures",
		"name": "TetR_sensor_structure",
		"outputs": [
			"pTet"
		]
	},
	{
		"collection": "input_sensors",
		"name": "AraC_sensor",
		"model": "AraC_sensor_model",
		"structure": "AraC_sensor_structure"
	},
	{
		"collection": "models",
		"name": "AraC_sensor_model",
		"functions": {
			"response_function": "sensor_response"
		},
		"parameters": [
			{
				"name": "ymax",
				"value": 0.0475,
				"description": "Maximal transcription (2.5 RPU * 0.019 for conversion to RNAP/s)"
			},
			{
				"name": "ymin",
				"value": 0.0001558,
				"description": "Minimal transcription (0.0082 RPU * 0.019 for conversion to RNAP/s)"
			},
			{
				"name": "alpha",
				"value": 0.01,
				"description": "Tandem parameter"
			},
			{
				"name": "beta",
				"value": 0.99,
				"description": "Tandem parameter"
			}
		]
	},
	{
		"collection": "structures",
		"name": "AraC_sensor_structure",
		"outputs": [
			"pBAD"
		]
	},
	{
		"collection": "input_sensors",
		"name": "LuxR_sensor",
		"model": "LuxR_sensor_model",
		"structure": "LuxR_sensor_structure"
	},
	{
		"collection": "models",
		"name": "LuxR_sensor_model",
		"functions": {
			"response_function": "sensor_response"
		},
		"parameters": [
			{
				"name": "ymax",
				"value": 0.00589,
				"description": "Maximal transcription (0.31 RPU * 0.019 for conversion to RNAP/s)"
			},
			{
				"name": "ymin",
				"value": 0.000475,
				"description": "Minimal transcription (0.025 RPU * 0.019 for conversion to RNAP/s)"
			},
			{
				"name": "alpha",
				"value": 0.8,
				"description": "Tandem parameter"
			},
			{
				"name": "beta",
				"value": 1.0,
				"description": "Tandem parameter"
			}
		]
	},
	{
		"collection": "structures",
		"name": "LuxR_sensor_structure",
		"outputs": [
			"pLuxStar"
		]
	},
	{
		"collection": "functions",
		"name": "sensor_response",
		"equation": "$STATE * (ymax - ymin) + ymin",
		"parameters": [
			{
				"name": "ymax",
				"map": "#//model/parameters/ymax"
			},
			{
				"name": "ymin",
				"map": "#//model/parameters/ymin"
			}
		]
	},
	{
		"collection": "parts",
		"type": "promoter",
		"name": "pTac",
		"dnasequence": "AACGATCGTTGGCTGTGTTGACAATTAATCATCGGCTCGTATAATGTGTGGAATTGTGAGCGCTCACAATT"
	},
	{
		"collection": "parts",
		"type": "promoter",
		"name": "pTet",
		"dnasequence": "TACTCCACCGTTGGCTTTTTTCCCTATCAGTGATAGAGATTGACATCCCTATCAGTGATAGAGATAATGAGCAC"
	},
	{
		"collection": "parts",
		"type": "promoter",
		"name": "pBAD",
		"dnasequence": "ACTTTTCATACTCCCGCCATTCAGAGAAGAAACCAATTGTCCATATTGCATCAGACATTGCCGTCACTGCGTCTTTTACTGGCTCTTCTCGCTAACCAAACCGGTAACCCCGCTTATTAAAAGCATTCTGTAACAAAGCGGGACCAAAGCCATGACAAAAACGCGTAACAAAAGTGTCTATAATCACGGCAGAAAAGTCCACATTGATTATTTGCACGGCGTCACACTTTGCTATGCCATAGCATTTTTATCCATAAGATTAGCGGATCCTACCTGACGCTTTTTATCGCAACTCTCTACTGTTTCTCCATACCCGTTTTTTTGGGCTAGC"
	},
	{
		"collection": "parts",
		"type": "promoter",
		"name": "pLuxStar",
		"dnasequence": "ATAGCTTCTTACCGGACCTGTAGGATCGTACAGGTTTACGCAAGAAAATGGTTTGTTACTTTCGAATAAA"
	},






	{
        "collection": "device_rules",
        "rules": {
            "function": "AND",
            "rules": [
                "STARTSWITH pTac",
                "STARTSWITH pBAD",
                "pSrpR BEFORE pTet",
                "pBAD BEFORE pSrpR",
                "pBAD BEFORE pAmeR",
                "pBAD BEFORE pBetI",
                "pBAD BEFORE pLitR",
                "pBAD BEFORE pTet",
                "pBAD BEFORE pHlyIIR",
                "pBAD BEFORE pLmrA",
                "pBAD BEFORE pPhlF",
                "pBAD BEFORE pPsrA",
                "pBAD BEFORE pBM3R1",
                "pBAD BEFORE pAmtR",
                "pBAD BEFORE pIcaRA",
                "pBAD BEFORE pQacR",
                "pTet BEFORE pAmeR",
                "pTet BEFORE pBetI",
                "pTet BEFORE pLitR",
                "pTet BEFORE pHlyIIR",
                "pTet BEFORE pLmrA",
                "pTet BEFORE pPsrA",
                "pTet BEFORE pAmtR",
                "pTet BEFORE pIcaRA",
                "pTac BEFORE pSrpR",
                "pTac BEFORE pAmeR",
                "pTac BEFORE pBetI",
                "pTac BEFORE pLitR",
                "pTac BEFORE pBAD",
                "pTac BEFORE pTet",
                "pTac BEFORE pHlyIIR",
                "pTac BEFORE pLmrA",
                "pTac BEFORE pPhlF",
                "pTac BEFORE pPsrA",
                "pTac BEFORE pBM3R1",
                "pTac BEFORE pAmtR",
                "pTac BEFORE pIcaRA",
                "pTac BEFORE pQacR",
                "pPhlF BEFORE pTet",
                "pBM3R1 BEFORE pTet",
                "pQacR BEFORE pTet",
                "ALL_FORWARD"
            ]
        }
    }
]
